{
  "$schema": "https://clyro.devstoolkit.space/schema/registry-item.json",
  "name": "checkbox",
  "type": "registry:ui",
  "author": "clyro (https://clyro.devstoolkit.space)",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "ui/checkbox.jsx",
      "content": "\"use client\";\nimport * as React from \"react\";\nimport { CheckIcon } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n/* --------------------\n   Checkbox\n   Controlled or uncontrolled checkbox with optional hover effect\n-------------------- */\nconst Checkbox = React.forwardRef(({ className, disabled, hoverEnabled = false, checkboxColor = \"#3b82f6\", checked: controlledChecked, defaultChecked, onChange, ...props }, ref) => {\n    // Track checked state (supports both controlled & uncontrolled)\n    const [checked, setChecked] = React.useState(defaultChecked ?? false);\n    const isControlled = controlledChecked !== undefined;\n    const currentChecked = isControlled ? controlledChecked : checked;\n    // Handle change event\n    const handleChange = (e) => {\n        if (!isControlled) {\n            setChecked(e.target.checked);\n        }\n        onChange?.(e);\n    };\n    return (React.createElement(\"label\", { className: cn(\"relative inline-flex items-center group cursor-pointer select-none\", disabled && \"cursor-not-allowed opacity-50\"), \"data-state\": currentChecked ? \"checked\" : \"unchecked\" },\n        React.createElement(\"input\", { type: \"checkbox\", ref: ref, disabled: disabled, checked: currentChecked, onChange: handleChange, className: \"peer sr-only\", ...props }),\n        React.createElement(\"div\", { \"data-slot\": \"checkbox\", className: cn(\"relative flex items-center justify-center shrink-0 rounded-[var(--radius)] border-2 box-border transition-colors duration-200 ease-in-out\", \"w-6 h-6\", \"border-gray-300 bg-white\", currentChecked &&\n                \"bg-[color:var(--checkbox-color)] border-[color:var(--checkbox-color)]\", \"peer-focus-visible:outline-none peer-focus-visible:ring-3 peer-focus-visible:ring-ring\", \"disabled:cursor-not-allowed disabled:opacity-50\", className), style: {\n                \"--checkbox-color\": checkboxColor,\n            } },\n            hoverEnabled && (React.createElement(\"span\", { className: \"absolute inset-[-12px] rounded-full bg-[color:var(--checkbox-color)] opacity-0 transition-opacity duration-200 group-hover:opacity-10 pointer-events-none\", style: {\n                    \"--checkbox-color\": checkboxColor,\n                } })),\n            currentChecked && (React.createElement(CheckIcon, { className: \"w-4 h-4 stroke-white m-0 p-0 leading-none absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\", strokeWidth: 3, \"aria-hidden\": \"true\" })))));\n});\nCheckbox.displayName = \"Checkbox\";\n/* --------------------\n   Export\n-------------------- */\nexport { Checkbox };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}