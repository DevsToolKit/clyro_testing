{
  "$schema": "https://clyro.devstoolkit.space/schema/registry-item.json",
  "name": "table",
  "type": "registry:ui",
  "author": "clyro (https://clyro.devstoolkit.space)",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "ui/table.jsx",
      "content": "\"use client\";\n/* -------------------- Imports -------------------- */\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n/* -------------------- Types & Constants -------------------- */\nconst TABLE_CAPTION_TYPE = Symbol(\"TableCaption\");\n/* -------------------- Table -------------------- */\n// Main table component with support for top/bottom captions\nfunction Table({ children, className, }) {\n    const topCaptions = [];\n    const bottomCaptions = [];\n    const tableContent = [];\n    React.Children.forEach(children, (child) => {\n        if (React.isValidElement(child) &&\n            child.type.$$typeofTableCaption ===\n                TABLE_CAPTION_TYPE) {\n            const pos = child.props.position ?? \"bottom\";\n            (pos === \"top\" ? topCaptions : bottomCaptions).push(child);\n        }\n        else {\n            tableContent.push(child);\n        }\n    });\n    return (React.createElement(React.Fragment, null,\n        topCaptions.length > 0 && (React.createElement(\"div\", { \"data-slot\": \"table-caption-top\" }, topCaptions)),\n        React.createElement(\"div\", { \"data-slot\": \"table-container\", className: \"relative w-full overflow-x-auto border border-border rounded-[var(--radius)]\" },\n            React.createElement(\"table\", { \"data-slot\": \"table\", className: cn(\"w-full text-sm caption-bottom\", className) }, tableContent)),\n        bottomCaptions.length > 0 && (React.createElement(\"div\", { \"data-slot\": \"table-caption-bottom\" }, bottomCaptions))));\n}\n/* -------------------- TableCaption -------------------- */\n// Styled caption for table, positionable at top or bottom\nconst TableCaption = ({ position = \"bottom\", className, children, }) => {\n    return (React.createElement(\"div\", { className: cn(\"text-muted-foreground text-sm text-center\", position === \"top\" ? \"mb-2\" : \"mt-2\", className) }, children));\n};\nTableCaption.$$typeofTableCaption = TABLE_CAPTION_TYPE;\nTableCaption.displayName = \"TableCaption\";\n/* -------------------- Table Subcomponents -------------------- */\nfunction TableHeader(props) {\n    return (React.createElement(\"thead\", { \"data-slot\": \"table-header\", className: cn(\"[&_tr]:border-b bg-gray-100 font-semibold\", props.className), ...props }));\n}\nfunction TableBody(props) {\n    return (React.createElement(\"tbody\", { \"data-slot\": \"table-body\", className: cn(\"[&_tr:last-child]:border-0\", props.className), ...props }));\n}\nfunction TableFooter(props) {\n    return (React.createElement(\"tfoot\", { \"data-slot\": \"table-footer\", className: cn(\"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\", props.className), ...props }));\n}\nfunction TableRow(props) {\n    return (React.createElement(\"tr\", { \"data-slot\": \"table-row\", className: cn(\"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors h-[48px]\", props.className), ...props }));\n}\nfunction TableHead(props) {\n    return (React.createElement(\"th\", { \"data-slot\": \"table-head\", className: cn(\"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\", props.className), ...props }));\n}\nfunction TableCell(props) {\n    return (React.createElement(\"td\", { \"data-slot\": \"table-cell\", className: cn(\"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px] text-[14px]\", props.className), ...props }));\n}\n/* -------------------- Exports -------------------- */\nexport { Table, TableCaption, TableHeader, TableBody, TableFooter, TableHead, TableRow, TableCell, };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}