{
  "$schema": "https://clyro.devstoolkit.space/schema/registry-item.json",
  "name": "table",
  "type": "registry:ui",
  "author": "clyro (https://clyro.devstoolkit.space)",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "ui/table.tsx",
      "content": "\"use client\";\n\n/* -------------------- Imports -------------------- */\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\n/* -------------------- Types & Constants -------------------- */\nconst TABLE_CAPTION_TYPE: unique symbol = Symbol(\"TableCaption\");\n\ntype TableCaptionProps = {\n  position?: \"top\" | \"bottom\"; // Caption position relative to table\n  className?: string;\n  children: React.ReactNode;\n};\n\ntype TableCaptionElement = React.FC<TableCaptionProps> & {\n  $$typeofTableCaption: typeof TABLE_CAPTION_TYPE;\n};\n\n/* -------------------- Table -------------------- */\n// Main table component with support for top/bottom captions\nfunction Table({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) {\n  const topCaptions: React.ReactNode[] = [];\n  const bottomCaptions: React.ReactNode[] = [];\n  const tableContent: React.ReactNode[] = [];\n\n  React.Children.forEach(children, (child) => {\n    if (\n      React.isValidElement(child) &&\n      (child.type as TableCaptionElement).$$typeofTableCaption ===\n        TABLE_CAPTION_TYPE\n    ) {\n      const pos = (child.props as TableCaptionProps).position ?? \"bottom\";\n      (pos === \"top\" ? topCaptions : bottomCaptions).push(child);\n    } else {\n      tableContent.push(child);\n    }\n  });\n\n  return (\n    <>\n      {topCaptions.length > 0 && (\n        <div data-slot=\"table-caption-top\">{topCaptions}</div>\n      )}\n\n      <div\n        data-slot=\"table-container\"\n        className=\"relative w-full overflow-x-auto border border-border rounded-[var(--radius)]\"\n      >\n        <table\n          data-slot=\"table\"\n          className={cn(\"w-full text-sm caption-bottom\", className)}\n        >\n          {tableContent}\n        </table>\n      </div>\n\n      {bottomCaptions.length > 0 && (\n        <div data-slot=\"table-caption-bottom\">{bottomCaptions}</div>\n      )}\n    </>\n  );\n}\n\n/* -------------------- TableCaption -------------------- */\n// Styled caption for table, positionable at top or bottom\nconst TableCaption: TableCaptionElement = ({\n  position = \"bottom\",\n  className,\n  children,\n}) => {\n  return (\n    <div\n      className={cn(\n        \"text-muted-foreground text-sm text-center\",\n        position === \"top\" ? \"mb-2\" : \"mt-2\",\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n};\nTableCaption.$$typeofTableCaption = TABLE_CAPTION_TYPE;\nTableCaption.displayName = \"TableCaption\";\n\n/* -------------------- Table Subcomponents -------------------- */\nfunction TableHeader(props: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\n        \"[&_tr]:border-b bg-gray-100 font-semibold\",\n        props.className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableBody(props: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", props.className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableFooter(props: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        props.className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableRow(props: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors h-[48px]\",\n        props.className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableHead(props: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        props.className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCell(props: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px] text-[14px]\",\n        props.className\n      )}\n      {...props}\n    />\n  );\n}\n\n/* -------------------- Exports -------------------- */\nexport {\n  Table,\n  TableCaption,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}