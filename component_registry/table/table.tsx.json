{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "table",
  "type": "registry:ui",
  "author": "shadcn (https://ui.shadcn.com)",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "ui/table.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\n// Context to register caption position\nconst TableCaptionContext = React.createContext<{\n  top?: React.ReactNode;\n  bottom?: React.ReactNode;\n}>({});\n\nfunction Table({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) {\n  // Extract captions from children\n  const topCaptions: React.ReactNode[] = [];\n  const bottomCaptions: React.ReactNode[] = [];\n  const tableContent: React.ReactNode[] = [];\n\n  React.Children.forEach(children, (child) => {\n    if (\n      React.isValidElement(child) &&\n      child.type === TableCaption &&\n      child.props.position === \"top\"\n    ) {\n      topCaptions.push(child);\n    } else if (\n      React.isValidElement(child) &&\n      child.type === TableCaption &&\n      child.props.position === \"bottom\"\n    ) {\n      bottomCaptions.push(child);\n    } else {\n      tableContent.push(child);\n    }\n  });\n\n  return (\n    <>\n      {/* Top captions go above the border */}\n      {topCaptions.length > 0 && (\n        <div data-slot=\"table-caption-top\">{topCaptions}</div>\n      )}\n\n      <div\n        data-slot=\"table-container\"\n        className=\"relative w-full overflow-x-auto border border-border rounded-[var(--radius)]\"\n      >\n        <table\n          data-slot=\"table\"\n          className={cn(\"w-full text-sm caption-bottom\", className)}\n        >\n          {tableContent}\n        </table>\n      </div>\n\n      {/* Bottom captions go below the border */}\n      {bottomCaptions.length > 0 && (\n        <div data-slot=\"table-caption-bottom\">{bottomCaptions}</div>\n      )}\n    </>\n  );\n}\n\n// TableCaption component\nfunction TableCaption({\n  position = \"bottom\",\n  className,\n  children,\n}: {\n  position?: \"top\" | \"bottom\";\n  className?: string;\n  children: React.ReactNode;\n}) {\n  return (\n    <div\n      className={cn(\n        \"text-muted-foreground text-sm text-center mt-2\",\n        position === \"top\" && \"mb-2\",\n        position === \"bottom\" && \"mt-2\",\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b bg-gray-100 font-semibold\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors h-[48px]\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px] text-[14px]\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Table,\n  TableCaption,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n};\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}