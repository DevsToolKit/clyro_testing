{
  "$schema": "https://clyro.devstoolkit.space/schema/registry-item.json",
  "name": "switch",
  "type": "registry:ui",
  "author": "clyro (https://clyro.devstoolkit.space)",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "ui/switch.jsx",
      "content": "\"use client\";\n/* -------------------- Imports -------------------- */\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n/* -------------------- Switch Component -------------------- */\n// A toggle switch supporting both controlled and uncontrolled usage\nconst Switch = React.forwardRef(({ className, checked: controlledChecked, defaultChecked = false, onCheckedChange, disabled, trackColor = \"bg-primary\", ...props }, ref) => {\n    const isControlled = controlledChecked !== undefined;\n    const [uncontrolledChecked, setChecked] = React.useState(defaultChecked);\n    const isChecked = isControlled ? controlledChecked : uncontrolledChecked;\n    const toggle = () => {\n        if (disabled)\n            return;\n        if (!isControlled)\n            setChecked(!isChecked);\n        onCheckedChange?.(!isChecked);\n    };\n    return (React.createElement(\"button\", { type: \"button\", role: \"switch\", \"aria-checked\": isChecked, disabled: disabled, ref: ref, onClick: toggle, className: cn(\"peer inline-flex h-[20px] w-[32px] shrink-0 items-center rounded-full border border-transparent shadow-xs outline-none transition-all\", \"focus-visible:ring-[3px] focus-visible:ring-ring/50 focus-visible:border-ring\", \"disabled:cursor-not-allowed disabled:opacity-50\", isChecked ? trackColor : \"bg-input dark:bg-input/80\", className), ...props },\n        React.createElement(\"span\", { className: cn(\"pointer-events-none block h-[14px] w-[14px] rounded-full ring-0 transition-transform\", isChecked\n                ? \"translate-x-[calc(100%)] dark:bg-primary-foreground bg-background\"\n                : \"translate-x-[2px] bg-background dark:bg-foreground\") })));\n});\nSwitch.displayName = \"Switch\";\n/* -------------------- Exports -------------------- */\nexport { Switch };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}